# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

bind ^s split-window -v
bind ^v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind ^h select-pane -L
bind ^j select-pane -D
bind ^k select-pane -U
bind ^l select-pane -R

# resize panes like vim
bind -r < resize-pane -L 10
bind -r > resize-pane -R 10
bind -r - resize-pane -D 10
bind -r + resize-pane -U 10

# bind : to command-prompt like vim
bind : command-prompt

# session management
bind C new-session
bind L choose-session

# allow rodent use
bind m set -g mouse on \; display 'Mouse: ON'
bind M set -g mouse off \; display 'Mouse: OFF'

# vi-style controls for copy mode
setw -g mode-keys vi

# Set the prefix to ^A
unbind C-b
set -g prefix ^A
bind a send-prefix

bind ^a last-window # toggle last window like screen

set -g update-environment "DISPLAY WINDOWID SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION"

bind K confirm kill-server
bind X confirm kill-window

# longer scrollback
set -g history-limit 10000

# set a 256color $TERM variable so programs inside tmux know they can use 256 colors
set -g default-terminal screen-256color

# reload tmux config file with C-a r
bind-key r source-file ~/.tmux.conf \; display-message '~/.tmux.conf reloaded'

# Create a new window and prompt for name
bind N command-prompt "new-window -n '%%'"

# Rebind prefix to b
bind B set -g prefix ^b
bind A set -g prefix ^a

# open splits and windows in same pwd
bind s split-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# neovim in tmux causes delay when pressing ESC, this reduces it
set -g escape-time 0 # ms

# TPM List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'Morantron/tmux-fingers'
set -g @fingers-pattern-0 'git push --set-upstream .*'

# initializes TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'

# let us use utf-8 drawing characters to make tab-like window formats
set -g status-style bg=default,fg=white

# make background window look like white tab
set-window-option -g window-status-format '#[fg=yellow,bg=default] #I #[fg=brightblack,bg=default] #W #[default]'
set-window-option -g window-status-style bg=default,fg=white,none

# make foreground window look like bold yellow foreground tab
set-window-option -g window-status-current-format '#[fg=black,bg=yellow] #I #[fg=white,bg=brightblack] #W #[default]'
set-window-option -g window-status-current-style none

set-option -g renumber-windows on

# Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l $(basename $SHELL)"

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

# Setup mouse to copy selection on drag
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Open ~/.tmux.conf in vim and reload settings on quit
unbind e
bind e new-window -n '~/.tmux.conf' "sh -c 'nvim ~/.tmux.conf && tmux source ~/.tmux.conf'"

# Refresh status line every 5 seconds - Good for when music is playing / update time etc
set -g status-interval 5

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 1

# length of tmux status line
set -g status-left-length 50
set -g status-right-length 150

# Set pane border colors
set -g pane-active-border-style fg=green
set -g pane-border-style fg=blue

#### Status Bar Settings
## Dark Theme

set -g status-bg black

# Set the left and right status
set -g status-left '#[bg=blue]#[fg=yellow] #S #{?window_zoomed_flag, üîç ,}#[bg=cyan]#[fg=blue]ÓÇ∞#[bg=cyan]#[fg=red] ‚ô• #(battery_info) #[bg=black]#[fg=cyan]ÓÇ∞ '
set -g status-right '#[fg=cyan]ÓÇ≤#[bg=cyan]#[fg=black] #(music_info) #[bg=cyan]#[fg=blue]ÓÇ≤#[bg=blue]#[fg=black] %b %d %H:%M '

# customize how windows are displayed in the status line
set -g window-status-current-format "#[fg=black]#[bg=brightmagenta]ÓÇ∞#[fg=black]#[bg=brightmagenta] #I* ÓÇ± #W #[fg=brightmagenta]#[bg=black]ÓÇ∞"
set -g window-status-format "#[fg=white]#[bg=black]#I- ÓÇ± #W"

## Light Theme

# Set the base background colour
#set -g status-bg brightwhite

# Set the left and right status
#set -g status-left '#[bg=cyan]#[fg=black] #S #{?window_zoomed_flag, üîç ,}#[bg=green]#[fg=cyan]ÓÇ∞#[fg=red]#[bg=green]  ‚ô• #(battery_info) #[bg=brightwhite]#[fg=green]ÓÇ∞ '
#set -g status-right '#[fg=green]ÓÇ≤#[bg=green]#[fg=black] #(music_info) #[bg=green]#[fg=cyan]ÓÇ≤#[bg=cyan]#[fg=black] %b %d %H:%M '

# customize how windows are displayed in the status line
#set -g window-status-current-format "#[fg=brightwhite]#[bg=brightcyan]ÓÇ∞#[fg=blue]#[bg=brightcyan] #I* ÓÇ± #W #[fg=brightcyan]#[bg=brightwhite]ÓÇ∞"
#set -g window-status-format "#[fg=black]#[bg=brightwhite]#I- ÓÇ± #W"
